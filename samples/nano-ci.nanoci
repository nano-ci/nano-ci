# frozen_string_literal: true

project :'nano-ci', 'main nano-ci project' do
  plugin :'command.git', '0.1.0'
  plugin :'command.ruby', '0.1.0'

  repo :sample do
    type :git
    uri 'https://github.com/nano-ci/nano-ci.git'
  end

  pipeline :pipeline, 'nano-ci build pipeline' do
    trigger :pipeline_trigger, :interval do
      interval 5
    end

    stage :sense_tree_head do
      job :sense do
        refs = git(repos.sample).ls_remote
        {
          :'git.heads.main' => refs['refs/heads/main']
        }
      end
    end

    stage :build, inputs: [:'git.heads.main'] do
      job :build_job, work_dir: '.', env: -> { ENV.to_h } do |inputs|
        sh 'rm -Rf ./*'
        git(repos.sample).clone(inputs[:'git.heads.main'])
        ruby.rspec.run
        {}
      end

      # after_failure do |inputs|
      #   puts 'job failed, running stage after_failure hook'
      #   # email.send subject: 'stage failed', body: 'nano-ci stage failed', to: 'nano-ci-dev@nanoci.cloud'
      # end
    end

    after_failure do |inputs|
      puts 'job failed, running pipeline after_failure hook'
      # email.send subject: 'stage failed', body: 'nano-ci stage failed', to: 'nano-ci-dev@nanoci.cloud'
    end

    pipe :'trigger.pipeline_trigger' >> :sense_tree_head >> :build
  end
end
