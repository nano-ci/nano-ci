# frozen_string_literal: true

# rubocop:disable Metrics/BlockLength

project :'debug-sample', 'main nano-ci project' do
  plugin :'command.git', '0.1.0'
  plugin :'command.docker', '0.1.0'

  repo :sample do
    type :git
    uri 'git@github.com:nano-ci/sample-private.git'
    auth({
           ssh_key: '/var/abc/id_rsa_sample'
         })
  end

  pipeline :pipeline, 'web service pipeline' do
    trigger :pipeline_trigger, :interval do
      interval 5
    end

    stage :debug do
      job :build_job, docker_image: 'ruby:latest', docker_volume: 'abc:/var/abc', work_dir: 'test' do |inputs|
        sh 'rm -Rf ./*'
        result = git(repos.sample).clone
        {
          stdout: result.stdout,
          stderr: result.stderr
        }
      end

      job :run_docker_commans do |inputs|
        docker.rm 'test_container_2' if docker.ps.any? { |x| x['Names'] == 'test_container_2' }

        res = docker.image('ruby:3').run(options: '--name test_container_2', command: 'echo abc')
        pp(res)
        { done: true }
      end

      job :do_or_fail do |inputs|
        puts 'job\'s done'
        { done: true }
      end
    end

    stage :report do
      job :print_report do |inputs|
        puts 'pipeline complete'
        { done: true }
      end
    end

    pipe :'trigger.pipeline_trigger' >> :debug >> :report
  end
end

# rubocop:enable Metrics/BlockLength
